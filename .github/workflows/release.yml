# .github/workflows/release.yml
name: goreleaser

on:
  pull_request:
  push:
    # run only against tags
    #tags:
    #  - "*"

permissions:
  contents: write
  # packages: write
  # issues: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Up Git Configuration
        run: |
          git config user.email "abhishekamralkar@gmail.com"
          git config user.name "abhishekamralkar"

      - name: Get the latest tag
        id: latest_tag
        run: |
          latest_tag=$(git describe --abbrev=0 --tags)
          echo "Latest tag: $latest_tag"
          echo "::set-output name=latest_tag::$latest_tag"

      - name: Extract major, minor, and patch versions
        id: extract_versions
        run: |
          IFS='.' read -ra version_parts <<< "${{ steps.latest_tag.outputs.latest_tag }}"
          echo "::set-output name=major::${version_parts[0]}"
          echo "::set-output name=minor::${version_parts[1]}"
          echo "::set-output name=patch::${version_parts[2]}"

      - name: Increment the patch version
        id: increment_version
        run: |
          patch=$(( ${{ steps.extract_versions.outputs.patch }} + 1 ))
          new_version="${{ steps.extract_versions.outputs.major }}.${{ steps.extract_versions.outputs.minor }}.$patch"
          echo "New version: $new_version"
          echo "::set-output name=new_version::$new_version"

      - name: Commit and push updated version
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -a "${{ steps.increment_version.outputs.new_version }}" -m "Version ${{ steps.increment_version.outputs.new_version }}"
          git push origin "${{ steps.increment_version.outputs.new_version }}"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

